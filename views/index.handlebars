<script src="https://www.gstatic.com/firebasejs/5.0.4/firebase.js"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
<style type="text/css">
  video {
    background-color: #ddd;
    border-radius: 7px;
    margin: 10px 0px 0px 10px;
    width: 320px;
    height: 240px;
  }

  button {
    margin: 5px 0px 0px 10px !important;
    width: 654px;
  }
</style>

<video id="yourVideo" autoplay="true"></video>


<video id="friendsVideo" autoplay="true"></video>
<br />

<button onclick="showFriendsFace()" type="button" class="btn btn-primary btn-lg"><span
    class="glyphicon glyphicon-facetime-video" aria-hidden="true"></span> Call</button>


<script type="text/javascript">

  $(document).ready(function() {
    showMyFace();
  });
  var config = {


    apiKey: "AIzaSyDdWXsOoKtyndHTJGElfLJvWxTWzFoMZ0Y",
    authDomain: "webrtc-e263a.firebaseapp.com",
    databaseURL: "https://webrtc-e263a.firebaseio.com",
    projectId: "webrtc-e263a",
    storageBucket: "webrtc-e263a.appspot.com",
    messagingSenderId: "937625305824",
    appId: "1:937625305824:web:8854aed95bf3a355fe0685"


  };
  firebase.initializeApp(config);
  var database = firebase.database().ref();
  var yourVideo = document.getElementById("yourVideo");
  var friendsVideo = document.getElementById("friendsVideo");
  var yourId = Math.floor(Math.random() * 1000000000);
  var servers = { 'iceServers': [{ 'urls': 'stun:stun.services.mozilla.com' }, { 'urls': 'stun:stun.l.google.com:19302' }, { 'urls': 'turn:numb.viagenie.ca', 'credential': 'webrtc', 'username': 'websitebeaver@mail.com' }] };
  var pc = new RTCPeerConnection(servers);
  pc.onicecandidate = (event => event.candidate ? sendMessage(yourId, JSON.stringify({ 'ice': event.candidate })) : console.log("Sent All Ice"));
  pc.onaddstream = (event =>  {
    console.log(event);
    friendsVideo.srcObject = event.stream
  });
  function sendMessage(senderId, data) {
    var msg = database.push({ sender: senderId, message: data });
    msg.remove();
  }
  function readMessage(data) {
   console.log("(data.val().message", data.val().message);
   if (!data.val().message) return;
    var msg = JSON.parse(data.val().message);
    
    var sender = data.val().sender;
      console.log("sender", sender);
    if (sender != yourId) {
      if (msg.ice != undefined) {
        pc.addIceCandidate(new RTCIceCandidate(msg.ice));
      }
      else if (msg.sdp.type == "offer") {
        var r = confirm("Answer call?");
        if (r == true) {
          pc.setRemoteDescription(new RTCSessionDescription(msg.sdp))
            .then(() => pc.createAnswer())
            .then(answer => pc.setLocalDescription(answer))
            .then(() => sendMessage(yourId, JSON.stringify({ 'sdp': pc.localDescription })));
        } else {
          alert("Rejected the call");
        }
      }
      else if (msg.sdp.type == "answer") {
        pc.setRemoteDescription(new RTCSessionDescription(msg.sdp));
      }
    }
  };
  database.on('child_added', readMessage);
  function showMyFace() {
    console.log("showMyFace");
    navigator.mediaDevices.getUserMedia({ audio: false, video: true })
      .then(stream => yourVideo.srcObject = stream)
      .then(stream => pc.addStream(stream));
  }
  function showFriendsFace() {
    pc.createOffer()
      .then(offer => pc.setLocalDescription(offer))
      .then(() => sendMessage(yourId, JSON.stringify({ 'sdp': pc.localDescription })));
  }
</script>